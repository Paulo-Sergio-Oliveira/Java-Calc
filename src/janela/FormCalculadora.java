package janela;
public class FormCalculadora extends javax.swing.JFrame {

    /**
     * Creates new form FormCalculadora
     */
    public FormCalculadora() {
        initComponents();
    }
    Double valor1 = 0.0;
    String sinal;
    Double result = 0.0;
    int contIgual = 0;
    int contOp = 0;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator2 = new javax.swing.JSeparator();
        txtResult = new javax.swing.JTextField();
        bt04 = new javax.swing.JButton();
        bt07 = new javax.swing.JButton();
        bt05 = new javax.swing.JButton();
        bt08 = new javax.swing.JButton();
        bt06 = new javax.swing.JButton();
        bt09 = new javax.swing.JButton();
        bt01 = new javax.swing.JButton();
        bt02 = new javax.swing.JButton();
        bt03 = new javax.swing.JButton();
        bt00 = new javax.swing.JButton();
        btVir = new javax.swing.JButton();
        btSub = new javax.swing.JButton();
        btIgual = new javax.swing.JButton();
        btMulti = new javax.swing.JButton();
        btClean = new javax.swing.JButton();
        btSoma = new javax.swing.JButton();
        btCleanAll = new javax.swing.JButton();
        btDiv = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtHistory = new javax.swing.JTextPane();
        btErase = new javax.swing.JButton();
        btPor = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtResult2 = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtResult.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        txtResult.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtResultMouseClicked(evt);
            }
        });
        txtResult.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtResultKeyTyped(evt);
            }
        });

        bt04.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        bt04.setText("4");
        bt04.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt04.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt04ActionPerformed(evt);
            }
        });

        bt07.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        bt07.setText("7");
        bt07.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt07.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt07ActionPerformed(evt);
            }
        });

        bt05.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        bt05.setText("5");
        bt05.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt05.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt05ActionPerformed(evt);
            }
        });

        bt08.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        bt08.setText("8");
        bt08.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt08.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt08ActionPerformed(evt);
            }
        });

        bt06.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        bt06.setText("6");
        bt06.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt06.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt06ActionPerformed(evt);
            }
        });

        bt09.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        bt09.setText("9");
        bt09.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt09.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt09ActionPerformed(evt);
            }
        });

        bt01.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        bt01.setText("1");
        bt01.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt01.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt01MouseClicked(evt);
            }
        });
        bt01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt01ActionPerformed(evt);
            }
        });

        bt02.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        bt02.setText("2");
        bt02.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt02ActionPerformed(evt);
            }
        });

        bt03.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        bt03.setText("3");
        bt03.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt03.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt03ActionPerformed(evt);
            }
        });

        bt00.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        bt00.setText("0");
        bt00.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt00ActionPerformed(evt);
            }
        });

        btVir.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        btVir.setText(".");
        btVir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btVir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVirActionPerformed(evt);
            }
        });

        btSub.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        btSub.setText("-");
        btSub.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSubActionPerformed(evt);
            }
        });

        btIgual.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        btIgual.setText("=");
        btIgual.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btIgual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIgualActionPerformed(evt);
            }
        });

        btMulti.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        btMulti.setText("*");
        btMulti.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btMulti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMultiActionPerformed(evt);
            }
        });

        btClean.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        btClean.setText("CE");
        btClean.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCleanActionPerformed(evt);
            }
        });

        btSoma.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        btSoma.setText("+");
        btSoma.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btSoma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSomaActionPerformed(evt);
            }
        });

        btCleanAll.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        btCleanAll.setText("C");
        btCleanAll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btCleanAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCleanAllActionPerformed(evt);
            }
        });

        btDiv.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        btDiv.setText("/");
        btDiv.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btDiv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDivActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(txtHistory);

        btErase.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        btErase.setText("<-");
        btErase.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btErase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEraseActionPerformed(evt);
            }
        });

        btPor.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        btPor.setText("%");
        btPor.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btPor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPorActionPerformed(evt);
            }
        });

        txtResult2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jScrollPane2.setViewportView(txtResult2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(btVir, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt00, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btIgual, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btDiv, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSoma, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtResult, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2))
                                .addGap(8, 8, 8)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bt07, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(bt08, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(bt09, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btClean, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btErase, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(bt04, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bt05, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bt06, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btCleanAll, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(bt01, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bt02, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bt03, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btMulti, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btSub, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btPor, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtResult, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bt07, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt08, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt09, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btClean, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btErase, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bt04, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bt05, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bt06, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btPor, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btCleanAll, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bt01, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt02, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt03, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btSub, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btMulti, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btVir, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt00, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btIgual, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btDiv, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSoma, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(427, 489));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bt01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt01ActionPerformed
        // TODO add your handling code here:
        txtResult.setText(txtResult.getText()+"1");
        txtHistory.setText(txtHistory.getText()+"1");
        if (sinal == "+" && contOp < 2){
            result = valor1+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp < 2){
            result = valor1-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp < 2){
            result = valor1*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp < 2){
            result = valor1/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp < 2){
            result = (valor1/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
        if (sinal == "+" && contOp >= 2){
            result = result+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp >= 2){
            result = result-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp >= 2){
            result = result*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp >= 2){
            result = result/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp >= 2){
            result = (result/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
    }//GEN-LAST:event_bt01ActionPerformed

    private void btVirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVirActionPerformed
        // TODO add your handling code here:
        txtResult.setText(txtResult.getText()+".");
        txtHistory.setText(txtHistory.getText()+".");
        if (sinal == "+" && contOp < 2){
            result = valor1+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp < 2){
            result = valor1-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp < 2){
            result = valor1*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp < 2){
            result = valor1/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp < 2){
            result = (valor1/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
        if (sinal == "+" && contOp >= 2){
            result = result+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp >= 2){
            result = result-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp >= 2){
            result = result*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp >= 2){
            result = result/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp >= 2){
            result = (result/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
    }//GEN-LAST:event_btVirActionPerformed

    private void bt05ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt05ActionPerformed
        // TODO add your handling code here:
        txtResult.setText(txtResult.getText()+"5");
        txtHistory.setText(txtHistory.getText()+"5");
        if (sinal == "+" && contOp < 2){
            result = valor1+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp < 2){
            result = valor1-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp < 2){
            result = valor1*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp < 2){
            result = valor1/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp < 2){
            result = (valor1/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
        if (sinal == "+" && contOp >= 2){
            result = result+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp >= 2){
            result = result-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp >= 2){
            result = result*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp >= 2){
            result = result/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp >= 2){
            result = (result/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
    }//GEN-LAST:event_bt05ActionPerformed

    private void bt03ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt03ActionPerformed
        // TODO add your handling code here:
        txtResult.setText(txtResult.getText()+"3");
        txtHistory.setText(txtHistory.getText()+"3");
        if (sinal == "+" && contOp < 2){
            result = valor1+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp < 2){
            result = valor1-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp < 2){
            result = valor1*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp < 2){
            result = valor1/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp < 2){
            result = (valor1/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
        if (sinal == "+" && contOp >= 2){
            result = result+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp >= 2){
            result = result-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp >= 2){
            result = result*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp >= 2){
            result = result/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp >= 2){
            result = (result/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
    }//GEN-LAST:event_bt03ActionPerformed

    private void bt00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt00ActionPerformed
        // TODO add your handling code here:
        txtResult.setText(txtResult.getText()+"0");
        txtHistory.setText(txtHistory.getText()+"0");
        if (sinal == "+" && contOp < 2){
            result = valor1+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp < 2){
            result = valor1-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp < 2){
            result = valor1*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp < 2){
            result = valor1/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp < 2){
            result = (valor1/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
        if (sinal == "+" && contOp >= 2){
            result = result+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp >= 2){
            result = result-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp >= 2){
            result = result*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp >= 2){
            result = result/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp >= 2){
            result = (result/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
    }//GEN-LAST:event_bt00ActionPerformed

    private void bt02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt02ActionPerformed
        // TODO add your handling code here:
        txtResult.setText(txtResult.getText()+"2");
        txtHistory.setText(txtHistory.getText()+"2");
        if (sinal == "+" && contOp < 2){
            result = valor1+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp < 2){
            result = valor1-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp < 2){
            result = valor1*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp < 2){
            result = valor1/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp < 2){
            result = (valor1/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
        if (sinal == "+" && contOp >= 2){
            result = result+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp >= 2){
            result = result-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp >= 2){
            result = result*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp >= 2){
            result = result/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp >= 2){
            result = (result/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
    }//GEN-LAST:event_bt02ActionPerformed

    private void bt04ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt04ActionPerformed
        // TODO add your handling code here:
        txtResult.setText(txtResult.getText()+"4");
        txtHistory.setText(txtHistory.getText()+"4");
        if (sinal == "+" && contOp < 2){
            result = valor1+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp < 2){
            result = valor1-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp < 2){
            result = valor1*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp < 2){
            result = valor1/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp < 2){
            result = (valor1/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
        if (sinal == "+" && contOp >= 2){
            result = result+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp >= 2){
            result = result-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp >= 2){
            result = result*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp >= 2){
            result = result/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp >= 2){
            result = (result/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
    }//GEN-LAST:event_bt04ActionPerformed

    private void bt06ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt06ActionPerformed
        // TODO add your handling code here:
        txtResult.setText(txtResult.getText()+"6");
        txtHistory.setText(txtHistory.getText()+"6");
        if (sinal == "+" && contOp < 2){
            result = valor1+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp < 2){
            result = valor1-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp < 2){
            result = valor1*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp < 2){
            result = valor1/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp < 2){
            result = (valor1/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
        if (sinal == "+" && contOp >= 2){
            result = result+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp >= 2){
            result = result-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp >= 2){
            result = result*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp >= 2){
            result = result/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp >= 2){
            result = (result/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
    }//GEN-LAST:event_bt06ActionPerformed

    private void bt07ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt07ActionPerformed
        // TODO add your handling code here:
        txtResult.setText(txtResult.getText()+"7");
        txtHistory.setText(txtHistory.getText()+"7");
        if (sinal == "+" && contOp < 2){
            result = valor1+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp < 2){
            result = valor1-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp < 2){
            result = valor1*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp < 2){
            result = valor1/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp < 2){
            result = (valor1/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
        if (sinal == "+" && contOp >= 2){
            result = result+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp >= 2){
            result = result-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp >= 2){
            result = result*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp >= 2){
            result = result/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp >= 2){
            result = (result/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
    }//GEN-LAST:event_bt07ActionPerformed

    private void bt08ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt08ActionPerformed
        // TODO add your handling code here:
        txtResult.setText(txtResult.getText()+"8");
        txtHistory.setText(txtHistory.getText()+"8");
        if (sinal == "+" && contOp < 2){
            result = valor1+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp < 2){
            result = valor1-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp < 2){
            result = valor1*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp < 2){
            result = valor1/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp < 2){
            result = (valor1/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
        if (sinal == "+" && contOp >= 2){
            result = result+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp >= 2){
            result = result-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp >= 2){
            result = result*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp >= 2){
            result = result/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp >= 2){
            result = (result/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
    }//GEN-LAST:event_bt08ActionPerformed

    private void bt09ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt09ActionPerformed
        // TODO add your handling code here:
        txtResult.setText(txtResult.getText()+"9");
        txtHistory.setText(txtHistory.getText()+"9");
        if (sinal == "+" && contOp < 2){
            result = valor1+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp < 2){
            result = valor1-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp < 2){
            result = valor1*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp < 2){
            result = valor1/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp < 2){
            result = (valor1/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
        if (sinal == "+" && contOp >= 2){
            result = result+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp >= 2){
            result = result-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp >= 2){
            result = result*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp >= 2){
            result = result/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp >= 2){
            result = (result/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
    }//GEN-LAST:event_bt09ActionPerformed

    private void btCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCleanActionPerformed
        // TODO add your handling code here:
        txtHistory.setText(txtHistory.getText()+"\n");
        txtResult.setText("");
        txtResult2.setText("");
        contIgual = 0;
        contOp = 0;
    }//GEN-LAST:event_btCleanActionPerformed

    private void btMultiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMultiActionPerformed
        // TODO add your handling code here:
        valor1 = Double.parseDouble(txtResult.getText());
        txtHistory.setText(txtHistory.getText()+"*");
        txtResult.setText("");
        sinal = "*";
        contOp = contOp + 1;
    }//GEN-LAST:event_btMultiActionPerformed

    private void btCleanAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCleanAllActionPerformed
        // TODO add your handling code here:
        valor1 = 0.0;
        txtHistory.setText("");
        txtResult.setText("");
        txtResult2.setText("");
        contIgual = 0;
        contOp = 0;
    }//GEN-LAST:event_btCleanAllActionPerformed

    private void btDivActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDivActionPerformed
        // TODO add your handling code here:
        valor1 = Double.parseDouble(txtResult.getText());
        txtHistory.setText(txtHistory.getText()+"/");
        txtResult.setText("");
        sinal = "/";
        contOp = contOp + 1;
    }//GEN-LAST:event_btDivActionPerformed

    private void btSomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSomaActionPerformed
        // TODO add your handling code here:
        valor1 = Double.parseDouble(txtResult.getText());
        txtHistory.setText(txtHistory.getText()+"+");
        txtResult.setText("");
        sinal = "+";
        contOp = contOp + 1;
    }//GEN-LAST:event_btSomaActionPerformed

    private void btIgualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIgualActionPerformed
        // TODO add your handling code here:
        txtResult.setText(String.valueOf(result));
        contIgual = contIgual+1;
        valor1 = 0.0;
        if (contIgual<2){
            txtHistory.setText(txtHistory.getText()+"="+String.valueOf(result));
        } else {
            txtHistory.setText(txtHistory.getText()+"\n"+String.valueOf(result));
            contIgual = 0;
        }
        contOp = 0;
    }//GEN-LAST:event_btIgualActionPerformed

    private void btSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSubActionPerformed
        // TODO add your handling code here:
        valor1 = Double.parseDouble(txtResult.getText());
        txtHistory.setText(txtHistory.getText()+"-");
        txtResult.setText("");
        sinal = "-";
        contOp = contOp + 1;
    }//GEN-LAST:event_btSubActionPerformed

    private void btEraseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEraseActionPerformed
        // TODO add your handling code here:
        txtResult.setText(txtResult.getText().substring(0,
        txtResult.getText().length()-1));
        txtHistory.setText(txtHistory.getText().substring(0,
        txtHistory.getText().length()-1));
        if (sinal == "+" && contOp < 2){
            result = valor1+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp < 2){
            result = valor1-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp < 2){
            result = valor1*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp < 2){
            result = valor1/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp < 2){
            result = (valor1/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
        if (sinal == "+" && contOp >= 2){
            result = result+Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "-" && contOp >= 2){
            result = result-Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "*" && contOp >= 2){
            result = result*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "/" && contOp >= 2){
            result = result/Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        } else if (sinal == "%" && contOp >= 2){
            result = (result/100)*Double.parseDouble(txtResult.getText());
            txtResult2.setText(String.valueOf(result));
        }
    }//GEN-LAST:event_btEraseActionPerformed

    private void btPorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPorActionPerformed
        // TODO add your handling code here:
        txtHistory.setText(txtHistory.getText()+"%");
        contOp = contOp + 1;
        if (contOp < 2){
            valor1 = Double.parseDouble(txtResult.getText());
        } else if (contOp >= 2 && sinal=="+"){
        result = (Double.parseDouble(txtResult.getText())/100*valor1);
        txtResult2.setText(String.valueOf(result));
        }
        txtResult.setText("");
        sinal = "%";
    }//GEN-LAST:event_btPorActionPerformed

    private void txtResultKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtResultKeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_txtResultKeyTyped

    private void txtResultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtResultMouseClicked
        // TODO add your handling code here:    
    }//GEN-LAST:event_txtResultMouseClicked

    private void bt01MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt01MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_bt01MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCalculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCalculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCalculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCalculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCalculadora().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt00;
    private javax.swing.JButton bt01;
    private javax.swing.JButton bt02;
    private javax.swing.JButton bt03;
    private javax.swing.JButton bt04;
    private javax.swing.JButton bt05;
    private javax.swing.JButton bt06;
    private javax.swing.JButton bt07;
    private javax.swing.JButton bt08;
    private javax.swing.JButton bt09;
    private javax.swing.JButton btClean;
    private javax.swing.JButton btCleanAll;
    private javax.swing.JButton btDiv;
    private javax.swing.JButton btErase;
    private javax.swing.JButton btIgual;
    private javax.swing.JButton btMulti;
    private javax.swing.JButton btPor;
    private javax.swing.JButton btSoma;
    private javax.swing.JButton btSub;
    private javax.swing.JButton btVir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextPane txtHistory;
    private javax.swing.JTextField txtResult;
    private javax.swing.JTextPane txtResult2;
    // End of variables declaration//GEN-END:variables
}
